# Prefab Gateway 配置示例
# 复制此文件为 .env 并根据需要修改

# ==================== 应用配置 ====================
APP_NAME=Prefab Gateway
DEBUG=false
LOG_LEVEL=INFO

# ==================== 服务器配置 ====================
HOST=0.0.0.0
PORT=8000

# ==================== 数据库配置（MySQL）====================
# ⚠️ 生产环境必须修改！
DB_HOST=localhost
DB_PORT=3306
DB_USER=prefab_gateway
DB_PASSWORD=change-me-in-production
DB_NAME=prefab_gateway

# ==================== 加密配置 ====================
# ⚠️ 生产环境必须修改！使用至少 32 字节的随机密钥
# 用于加密存储在数据库中的用户密钥
# 生成方式: python -c "import secrets; print(secrets.token_urlsafe(32))"
ENCRYPTION_KEY=your-32-byte-encryption-key-change-in-production

# ==================== JWT 配置 ====================
# ⚠️ 生产环境必须修改！
# 此密钥用于验证来自 GTPlanner Platform 的 JWT token
# ⚠️ 必须与 GTPlanner-frontend 的 GATEWAY_JWT_SECRET 保持一致！
# 生成方式: python -c "import secrets; print(secrets.token_hex(32))"
JWT_SECRET_KEY=your-secret-key-change-in-production
JWT_ALGORITHM=HS256
JWT_EXPIRATION_MINUTES=30

# ==================== Redis 配置 ====================
# 可选 - 如果不配置将使用内存缓存
# Redis 用于缓存 Prefab 规格（L1 缓存层）
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_DB=0
# REDIS_PASSWORD=

# ==================== Webhook 配置 ====================
# 用于验证来自 prefab-factory 的 webhook 签名
# ⚠️ 必须与 prefab-factory 的配置中的密钥保持一致！
# 生成方式: python -c "import secrets; print(secrets.token_hex(32))"
WEBHOOK_SECRET=your-webhook-secret-shared-with-factory

# ==================== Knative 服务配置 ====================
KNATIVE_DOMAIN_SUFFIX=prefab.svc.cluster.local
KNATIVE_NAMESPACE=default

# ==================== HTTP 客户端配置 ====================
HTTP_TIMEOUT=30
HTTP_MAX_RETRIES=2

# ==================== 文件处理和对象存储配置 ====================
# PVC 挂载路径（K8s 环境中 Gateway 和 Prefab 共享的存储）
WORKSPACE_ROOT=/mnt/prefab-workspace

# S3 兼容对象存储配置（支持 AWS S3、阿里云 OSS、MinIO 等）
# ⚠️ 生产环境必须配置！
S3_BUCKET=prefab-outputs

# S3 路径前缀（用于共享存储桶时区分项目，如 "gtplanner" 或 "project-a"）
# 留空表示不使用前缀，直接在桶根目录下创建 prefab-outputs/
# 设置后路径格式: s3://bucket/{prefix}/prefab-outputs/...
S3_PREFIX=

# AWS S3 凭证（使用 AWS S3 时配置）
# AWS_ACCESS_KEY_ID=your-aws-access-key
# AWS_SECRET_ACCESS_KEY=your-aws-secret-key
# AWS_DEFAULT_REGION=us-east-1

# 阿里云 OSS 配置示例（S3 兼容模式）
# 访问密钥从阿里云控制台获取
# AWS_ACCESS_KEY_ID=your-aliyun-access-key-id
# AWS_SECRET_ACCESS_KEY=your-aliyun-access-key-secret
# S3_REGION=oss-cn-hangzhou
# S3_ENDPOINT_URL=https://oss-cn-hangzhou.aliyuncs.com

# 其他 S3 兼容存储（如 MinIO）
# AWS_ACCESS_KEY_ID=minioadmin
# AWS_SECRET_ACCESS_KEY=minioadmin
# S3_REGION=us-east-1
# S3_ENDPOINT_URL=http://minio:9000
