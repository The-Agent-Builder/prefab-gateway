"""simplify deployment status and add error field

Revision ID: 25479ff6ef33
Revises: 
Create Date: 2025-10-17 18:17:55.301654

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision: str = '25479ff6ef33'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # 1. 添加新字段
    op.add_column('prefab_specs', sa.Column('deployment_error', sa.Text(), nullable=True, comment='部署失败原因'))
    
    # 2. 修改枚举类型：从 5 个状态简化为 2 个（DEPLOYED, FAILED）
    # 注意：MySQL 不支持直接修改 ENUM，需要通过 ALTER TABLE MODIFY
    op.execute("""
        ALTER TABLE prefab_specs 
        MODIFY COLUMN deployment_status 
        ENUM('deployed', 'failed') 
        NOT NULL 
        COMMENT '部署状态'
    """)
    
    # 3. 清理现有的非法状态（将 pending/building/deploying 标记为 failed）
    op.execute("""
        UPDATE prefab_specs 
        SET deployment_status = 'failed',
            deployment_error = '迁移：之前状态为部署中'
        WHERE deployment_status NOT IN ('deployed', 'failed')
    """)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # 1. 恢复枚举类型
    op.execute("""
        ALTER TABLE prefab_specs 
        MODIFY COLUMN deployment_status 
        ENUM('pending', 'building', 'deploying', 'deployed', 'failed') 
        NOT NULL 
        COMMENT '部署状态'
    """)
    
    # 2. 删除新字段
    op.drop_column('prefab_specs', 'deployment_error')
    # ### end Alembic commands ###
