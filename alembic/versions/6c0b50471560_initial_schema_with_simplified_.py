"""initial schema with simplified deployment status

Revision ID: 6c0b50471560
Revises: 
Create Date: 2025-10-17 18:26:44.143322

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '6c0b50471560'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('audit_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('request_id', sa.String(length=64), nullable=True, comment='请求 ID'),
    sa.Column('user_id', sa.String(length=64), nullable=False, comment='用户 ID'),
    sa.Column('action', sa.String(length=64), nullable=False, comment='操作类型（run, create_secret, delete_secret 等）'),
    sa.Column('resource_type', sa.String(length=64), nullable=True, comment='资源类型（prefab, secret 等）'),
    sa.Column('resource_id', sa.String(length=256), nullable=True, comment='资源 ID'),
    sa.Column('endpoint', sa.String(length=256), nullable=True, comment='API 端点'),
    sa.Column('method', sa.String(length=16), nullable=True, comment='HTTP 方法'),
    sa.Column('ip_address', sa.String(length=64), nullable=True, comment='客户端 IP'),
    sa.Column('user_agent', sa.String(length=512), nullable=True, comment='User Agent'),
    sa.Column('success', sa.Boolean(), nullable=False, comment='是否成功'),
    sa.Column('error_code', sa.String(length=64), nullable=True, comment='错误代码'),
    sa.Column('error_message', sa.Text(), nullable=True, comment='错误消息'),
    sa.Column('extra_metadata', sa.JSON(), nullable=True, comment='额外的元数据（JSON）'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('duration_ms', sa.Integer(), nullable=True, comment='处理耗时（毫秒）'),
    sa.PrimaryKeyConstraint('id'),
    comment='审计日志表'
    )
    op.create_index('idx_request', 'audit_logs', ['request_id'], unique=False)
    op.create_index('idx_user_action_time', 'audit_logs', ['user_id', 'action', 'created_at'], unique=False)
    op.create_index(op.f('ix_audit_logs_action'), 'audit_logs', ['action'], unique=False)
    op.create_index(op.f('ix_audit_logs_created_at'), 'audit_logs', ['created_at'], unique=False)
    op.create_index(op.f('ix_audit_logs_id'), 'audit_logs', ['id'], unique=False)
    op.create_index(op.f('ix_audit_logs_request_id'), 'audit_logs', ['request_id'], unique=False)
    op.create_index(op.f('ix_audit_logs_user_id'), 'audit_logs', ['user_id'], unique=False)
    op.create_table('prefab_specs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('prefab_id', sa.String(length=128), nullable=False, comment='预制件 ID'),
    sa.Column('version', sa.String(length=32), nullable=False, comment='版本号'),
    sa.Column('spec_json', sa.JSON(), nullable=False, comment='完整的 manifest.json 内容'),
    sa.Column('knative_service_url', sa.String(length=512), nullable=True, comment='Knative 服务地址'),
    sa.Column('deployment_status', sa.Enum('DEPLOYED', 'FAILED', name='deploymentstatus'), nullable=False, comment='部署状态'),
    sa.Column('deployment_error', sa.Text(), nullable=True, comment='部署失败原因'),
    sa.Column('artifact_url', sa.String(length=512), nullable=True, comment='制品 URL（GitHub Release）'),
    sa.Column('source_repo', sa.String(length=256), nullable=True, comment='源代码仓库'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('deployed_at', sa.DateTime(), nullable=True, comment='部署完成时间'),
    sa.Column('call_count', sa.Integer(), nullable=True, comment='调用次数'),
    sa.Column('last_called_at', sa.DateTime(), nullable=True, comment='最后调用时间'),
    sa.PrimaryKeyConstraint('id'),
    comment='预制件规格表'
    )
    op.create_index('idx_deployment_status', 'prefab_specs', ['deployment_status'], unique=False)
    op.create_index('idx_prefab_version', 'prefab_specs', ['prefab_id', 'version'], unique=True)
    op.create_index(op.f('ix_prefab_specs_id'), 'prefab_specs', ['id'], unique=False)
    op.create_index(op.f('ix_prefab_specs_prefab_id'), 'prefab_specs', ['prefab_id'], unique=False)
    op.create_index(op.f('ix_prefab_specs_version'), 'prefab_specs', ['version'], unique=False)
    op.create_table('user_secrets',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.String(length=64), nullable=False, comment='用户 ID'),
    sa.Column('prefab_id', sa.String(length=128), nullable=False, comment='预制件 ID（如 weather-api-v1）'),
    sa.Column('secret_name', sa.String(length=128), nullable=False, comment='密钥名称（如 API_KEY）'),
    sa.Column('secret_value', sa.Text(), nullable=False, comment='加密后的密钥值'),
    sa.Column('encryption_key_id', sa.String(length=64), nullable=True, comment='加密密钥 ID（用于密钥轮转）'),
    sa.Column('status', sa.Enum('ACTIVE', 'DISABLED', 'EXPIRED', name='secretstatus'), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True, comment='密钥描述'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=True, comment='过期时间'),
    sa.Column('last_used_at', sa.DateTime(), nullable=True, comment='最后使用时间'),
    sa.PrimaryKeyConstraint('id'),
    comment='用户密钥表'
    )
    op.create_index('idx_status', 'user_secrets', ['status'], unique=False)
    op.create_index('idx_user_prefab_secret', 'user_secrets', ['user_id', 'prefab_id', 'secret_name'], unique=True)
    op.create_index(op.f('ix_user_secrets_id'), 'user_secrets', ['id'], unique=False)
    op.create_index(op.f('ix_user_secrets_prefab_id'), 'user_secrets', ['prefab_id'], unique=False)
    op.create_index(op.f('ix_user_secrets_user_id'), 'user_secrets', ['user_id'], unique=False)
    op.create_table('webhook_events',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('event_id', sa.String(length=64), nullable=False, comment='事件 ID（幂等性）'),
    sa.Column('source', sa.String(length=64), nullable=False, comment='事件来源（factory, github 等）'),
    sa.Column('event_type', sa.String(length=64), nullable=False, comment='事件类型（deployment.success, deployment.failed 等）'),
    sa.Column('prefab_id', sa.String(length=128), nullable=True, comment='预制件 ID'),
    sa.Column('version', sa.String(length=32), nullable=True, comment='版本号'),
    sa.Column('payload', sa.JSON(), nullable=False, comment='完整的事件载荷'),
    sa.Column('processed', sa.Boolean(), nullable=False, comment='是否已处理'),
    sa.Column('processed_at', sa.DateTime(), nullable=True, comment='处理时间'),
    sa.Column('processing_error', sa.Text(), nullable=True, comment='处理错误信息'),
    sa.Column('retry_count', sa.Integer(), nullable=True, comment='重试次数'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('signature', sa.String(length=256), nullable=True, comment='HMAC 签名（用于验证）'),
    sa.PrimaryKeyConstraint('id'),
    comment='Webhook 事件表'
    )
    op.create_index('idx_prefab_event', 'webhook_events', ['prefab_id', 'event_type'], unique=False)
    op.create_index('idx_processed', 'webhook_events', ['processed', 'created_at'], unique=False)
    op.create_index(op.f('ix_webhook_events_event_id'), 'webhook_events', ['event_id'], unique=True)
    op.create_index(op.f('ix_webhook_events_event_type'), 'webhook_events', ['event_type'], unique=False)
    op.create_index(op.f('ix_webhook_events_id'), 'webhook_events', ['id'], unique=False)
    op.create_index(op.f('ix_webhook_events_prefab_id'), 'webhook_events', ['prefab_id'], unique=False)
    op.create_index(op.f('ix_webhook_events_processed'), 'webhook_events', ['processed'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_webhook_events_processed'), table_name='webhook_events')
    op.drop_index(op.f('ix_webhook_events_prefab_id'), table_name='webhook_events')
    op.drop_index(op.f('ix_webhook_events_id'), table_name='webhook_events')
    op.drop_index(op.f('ix_webhook_events_event_type'), table_name='webhook_events')
    op.drop_index(op.f('ix_webhook_events_event_id'), table_name='webhook_events')
    op.drop_index('idx_processed', table_name='webhook_events')
    op.drop_index('idx_prefab_event', table_name='webhook_events')
    op.drop_table('webhook_events')
    op.drop_index(op.f('ix_user_secrets_user_id'), table_name='user_secrets')
    op.drop_index(op.f('ix_user_secrets_prefab_id'), table_name='user_secrets')
    op.drop_index(op.f('ix_user_secrets_id'), table_name='user_secrets')
    op.drop_index('idx_user_prefab_secret', table_name='user_secrets')
    op.drop_index('idx_status', table_name='user_secrets')
    op.drop_table('user_secrets')
    op.drop_index(op.f('ix_prefab_specs_version'), table_name='prefab_specs')
    op.drop_index(op.f('ix_prefab_specs_prefab_id'), table_name='prefab_specs')
    op.drop_index(op.f('ix_prefab_specs_id'), table_name='prefab_specs')
    op.drop_index('idx_prefab_version', table_name='prefab_specs')
    op.drop_index('idx_deployment_status', table_name='prefab_specs')
    op.drop_table('prefab_specs')
    op.drop_index(op.f('ix_audit_logs_user_id'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_request_id'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_id'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_created_at'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_action'), table_name='audit_logs')
    op.drop_index('idx_user_action_time', table_name='audit_logs')
    op.drop_index('idx_request', table_name='audit_logs')
    op.drop_table('audit_logs')
    # ### end Alembic commands ###
